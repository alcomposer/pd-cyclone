#N canvas 514 91 563 516 10;
#X obj 0 358 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 0 406 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 0 443 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 415 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 83 372 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 157 415 signal;
#X text 156 453 (none);
#X obj 4 475 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 150 215 nbx 5 14 -100 0 1 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 153 184 hsl 180 15 -100 0 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 121 372 signal/float;
#X text 77 92 [atodb~] takes any given signal representing a dBFS amplitude value and outputs a signal which is a linear amplitude conversion of the input.;
#X text 75 141 Conversion expression: amp = pow(10 \, dBFS / 20);
#X obj 150 277 cyclone/dbtoa~;
#X text 209 372 - value representing dBFS amplitude;
#X text 209 417 - corresponding linear amplitude value;
#X text 267 318 Linear Amplitude;
#X obj 150 240 sig~ -100;
#X obj 150 317 cyclone/number~;
#A saved 0 0 100 -inf inf #2a3434 #ffffff #b6fefd;
#X obj 497 71 cyclone/setdsp~;
#X obj 4 5 ./header dbtoa~;
#X text 22 61 Convert dBFS to linear amplitude for signals;
#X text 212 214 dBFS;
#X connect 8 0 17 0;
#X connect 9 0 8 0;
#X connect 13 0 18 0;
#X connect 17 0 13 0;
